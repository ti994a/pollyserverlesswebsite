AWSTemplateFormatVersion: '2010-09-09'
Resources:
  PollyLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: CloudWatchFullAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - autoscaling:Describe*
            - cloudwatch:*
            - logs:*
            - sns:*
            - iam:GetPolicy
            - iam:GetPolicyVersion
            - iam:GetRole
            Effect: Allow
            Resource: "*"
          - Effect: Allow
            Action: iam:CreateServiceLinkedRole
            Resource: arn:aws:iam::*:role/aws-service-role/events.amazonaws.com/AWSServiceRoleForCloudWatchEvents*
            Condition:
              StringLike:
                iam:AWSServiceName: events.amazonaws.com
      - PolicyName: AmazonS3FullAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:*
            Resource: "*"
      - PolicyName: CloudWatchLogsFullAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - logs:*
            Effect: Allow
            Resource: "*"
      - PolicyName: AmazonPollyFullAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - polly:*
            Resource: "*"
  PollyLambda:
    Type: "AWS::Lambda::Function"
    Properties:
      Description: "Converts text files dropped into S3 bucket into speech-synthesized audio files using Polly"
      Handler: "lambda_function.lambda_handler"
      Role: !GetAtt [ PollyLambdaExecutionRole, Arn ]
      Code:
        S3Bucket: "staging-bucket-us-east-1-joeyd"
        S3Key: "polly_lambda_function.py.zip"
      Runtime: "python3.6"
      Timeout: "300"
      Environment:
        Variables:
          default_language: "en" 
          en: "Matthew"
          fr: "Celine"
          output: "mp3"
          output_bucket: !Ref AudioBucket
          supported_languages: "en,fr"
  SiteBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: "pollyserverlesswebsite-site"
      AccessControl: "PublicRead"
      WebsiteConfiguration:
        IndexDocument: "index.html"
  AudioBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: "pollyserverlesswebsite-audio"
  CodeBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: "pollyserverlesswebsite-code"
  PermissionForS3ToInvokePollyLambda:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !GetAtt PollyLambda.Arn
      Principal: "s3.amazonaws.com"
      SourceArn: !GetAtt CodeBucket.Arn
Outputs:
  PollyLambdaARN:
    Description: "The ARN of the PollyLambda created by this template"
    Value: !GetAtt PollyLambda.Arn
  